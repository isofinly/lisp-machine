source: |-
  (progn 
    (include "functions/io.lisp")

    (setq a (setq b "hello"))
    (print_string a)
    (setq a (defun foo (x) (+ x 1)))
    (print_int a))
input: |-
  foo
code: |-
  0c000000000002000c4000000000026c00000000000000010e0000000000000001c0000000000000000000000000000a0e0000000000000000c00000000000010e0000000000000000c000000000000408c00000000000000d0000000000000006c00000000000000d000000000000000e00000000000000000000000000000a0e0000000000000000c00000000000020e0000000000000000c000000000000508c00000000000000d0000000000000005c00000000000000d0000000000000002c00000000000000d000000000000000a40000000000221000000000000000a0e0000000000000000c000000000000109c00000000000000d0000000000000001c00000000000000c4000000000020400000000000000000e0000000000000000c000000000000306c00000000000000d000000000000000a4000000000022a000000000000003012000000000000000c4000000000026a00000000000000000e0000000000000000c000000000000305c00000000000000d000000000000000a4000000000026a00c00000000000000e0000000000000000c000000000000308c00000000000000d000000000000000e00000000000000000000000000003002c00000000000000d00000000000000120000000000000000000000000000010e0000000000000000c000000000000105c00000000000000d000000000000000e0000000000000000000000000000000e0000000000000000c00000000000020e0000000000000000c000000000000507c00000000000000d0000000000000006c00000000000000d0000000000000009c00000000000000d000000000000000a4000000000025c00000000000000010e0000000000000000c000000000000105c00000000000000d000000000000000a4000000000025b00000000000000301200000000000000000000000000000a0e0000000000000000c000000000000108c00000000000000d0000000000000001c00000000000000c4000000000024c0c4000000000025d000000000000000000c00000000000000e0000000000000000c000000000000307c00000000000000d0000000000000001c0000000000002000000000000000a0e0000000000000000c000000000000108c00000000000000d0000000000000001c00000000000000c4000000000022a0d0000000000000010000000000000000000000000000000000000000000000501400000000000020000000000000068014000000000000300000000000000650140000000000004000000000000006c0140000000000005000000000000006c0140000000000006000000000000006f014000000000000700000000000000020e0000000000000001c00000000000000e0000000000000001c000000000000000c00000000000000e00000000000000014000000000000100800000000000010e0000000000000000000000000000000e0000000000000000c000000000000006c00000000000010b4000000000029200c000000000000202c0000000000000020000000000000101400000000000010080000000000001120000000000000000c0000000000000020000000000000101c00000000000000c4000000000028500c00000000000020d000000000000000d000000000000000d000000000000000c4000000000029d00000000000000010e0000000000000000c000000000000202c00000000000000d000000000000001000000000000000000000000000000001c000000000000100c00000000000010e000000000000000f400000000002010d000000000000001300000000000000
debug: |-
  0000 - 0C0000000000000200 - JMP 512 (ADDRESS)
  0200 - 0C000000000000026C - JMP 620 (ADDRESS)
  0201 - 000000000000000001 - LD 1 (DIRECT)
  0202 - 0E0000000000000000 - PUSH 
  0203 - 010000000000000000 - ST 0 (STACK_OFFSET)
  0204 - 00000000000000000A - LD 10 (DIRECT)
  0205 - 0E0000000000000000 - PUSH 
  0206 - 000000000000000001 - LD 1 (STACK_OFFSET)
  0207 - 0E0000000000000000 - PUSH 
  0208 - 000000000000000004 - LD 4 (STACK_OFFSET)
  0209 - 080000000000000000 - DIV 0 (STACK_OFFSET)
  020A - 0D0000000000000000 - POP 
  020B - 060000000000000000 - EQ 0 (STACK_OFFSET)
  020C - 0D0000000000000000 - POP 
  020D - 0E0000000000000000 - PUSH 
  020E - 00000000000000000A - LD 10 (DIRECT)
  020F - 0E0000000000000000 - PUSH 
  0210 - 000000000000000002 - LD 2 (STACK_OFFSET)
  0211 - 0E0000000000000000 - PUSH 
  0212 - 000000000000000005 - LD 5 (STACK_OFFSET)
  0213 - 080000000000000000 - DIV 0 (STACK_OFFSET)
  0214 - 0D0000000000000000 - POP 
  0215 - 050000000000000000 - GT 0 (STACK_OFFSET)
  0216 - 0D0000000000000000 - POP 
  0217 - 020000000000000000 - ADD 0 (STACK_OFFSET)
  0218 - 0D0000000000000000 - POP 
  0219 - 0A0000000000000221 - JZ 545 (ADDRESS)
  021A - 00000000000000000A - LD 10 (DIRECT)
  021B - 0E0000000000000000 - PUSH 
  021C - 000000000000000001 - LD 1 (STACK_OFFSET)
  021D - 090000000000000000 - MUL 0 (STACK_OFFSET)
  021E - 0D0000000000000000 - POP 
  021F - 010000000000000000 - ST 0 (STACK_OFFSET)
  0220 - 0C0000000000000204 - JMP 516 (ADDRESS)
  0221 - 000000000000000000 - LD 0 (DIRECT)
  0222 - 0E0000000000000000 - PUSH 
  0223 - 000000000000000003 - LD 3 (STACK_OFFSET)
  0224 - 060000000000000000 - EQ 0 (STACK_OFFSET)
  0225 - 0D0000000000000000 - POP 
  0226 - 0A000000000000022A - JZ 554 (ADDRESS)
  0227 - 000000000000000030 - LD 48 (DIRECT)
  0228 - 120000000000000000 - OUT 
  0229 - 0C000000000000026A - JMP 618 (ADDRESS)
  022A - 000000000000000000 - LD 0 (DIRECT)
  022B - 0E0000000000000000 - PUSH 
  022C - 000000000000000003 - LD 3 (STACK_OFFSET)
  022D - 050000000000000000 - GT 0 (STACK_OFFSET)
  022E - 0D0000000000000000 - POP 
  022F - 0A000000000000026A - JZ 618 (ADDRESS)
  0230 - 000000000000000000 - LD 0 (STACK_OFFSET)
  0231 - 0E0000000000000000 - PUSH 
  0232 - 000000000000000003 - LD 3 (STACK_OFFSET)
  0233 - 080000000000000000 - DIV 0 (STACK_OFFSET)
  0234 - 0D0000000000000000 - POP 
  0235 - 0E0000000000000000 - PUSH 
  0236 - 000000000000000030 - LD 48 (DIRECT)
  0237 - 020000000000000000 - ADD 0 (STACK_OFFSET)
  0238 - 0D0000000000000000 - POP 
  0239 - 120000000000000000 - OUT 
  023A - 000000000000000001 - LD 1 (DIRECT)
  023B - 0E0000000000000000 - PUSH 
  023C - 000000000000000001 - LD 1 (STACK_OFFSET)
  023D - 050000000000000000 - GT 0 (STACK_OFFSET)
  023E - 0D0000000000000000 - POP 
  023F - 0E0000000000000000 - PUSH 
  0240 - 000000000000000000 - LD 0 (DIRECT)
  0241 - 0E0000000000000000 - PUSH 
  0242 - 000000000000000002 - LD 2 (STACK_OFFSET)
  0243 - 0E0000000000000000 - PUSH 
  0244 - 000000000000000005 - LD 5 (STACK_OFFSET)
  0245 - 070000000000000000 - MOD 0 (STACK_OFFSET)
  0246 - 0D0000000000000000 - POP 
  0247 - 060000000000000000 - EQ 0 (STACK_OFFSET)
  0248 - 0D0000000000000000 - POP 
  0249 - 090000000000000000 - MUL 0 (STACK_OFFSET)
  024A - 0D0000000000000000 - POP 
  024B - 0A000000000000025C - JZ 604 (ADDRESS)
  024C - 000000000000000001 - LD 1 (DIRECT)
  024D - 0E0000000000000000 - PUSH 
  024E - 000000000000000001 - LD 1 (STACK_OFFSET)
  024F - 050000000000000000 - GT 0 (STACK_OFFSET)
  0250 - 0D0000000000000000 - POP 
  0251 - 0A000000000000025B - JZ 603 (ADDRESS)
  0252 - 000000000000000030 - LD 48 (DIRECT)
  0253 - 120000000000000000 - OUT 
  0254 - 00000000000000000A - LD 10 (DIRECT)
  0255 - 0E0000000000000000 - PUSH 
  0256 - 000000000000000001 - LD 1 (STACK_OFFSET)
  0257 - 080000000000000000 - DIV 0 (STACK_OFFSET)
  0258 - 0D0000000000000000 - POP 
  0259 - 010000000000000000 - ST 0 (STACK_OFFSET)
  025A - 0C000000000000024C - JMP 588 (ADDRESS)
  025B - 0C000000000000025D - JMP 605 (ADDRESS)
  025C - 000000000000000000 - LD 0 (DIRECT)
  025D - 000000000000000000 - LD 0 (STACK_OFFSET)
  025E - 0E0000000000000000 - PUSH 
  025F - 000000000000000003 - LD 3 (STACK_OFFSET)
  0260 - 070000000000000000 - MOD 0 (STACK_OFFSET)
  0261 - 0D0000000000000000 - POP 
  0262 - 010000000000000002 - ST 2 (STACK_OFFSET)
  0263 - 00000000000000000A - LD 10 (DIRECT)
  0264 - 0E0000000000000000 - PUSH 
  0265 - 000000000000000001 - LD 1 (STACK_OFFSET)
  0266 - 080000000000000000 - DIV 0 (STACK_OFFSET)
  0267 - 0D0000000000000000 - POP 
  0268 - 010000000000000000 - ST 0 (STACK_OFFSET)
  0269 - 0C000000000000022A - JMP 554 (ADDRESS)
  026A - 0D0000000000000000 - POP 
  026B - 100000000000000000 - RET 
  026C - 000000000000000000 - LD 0 (DIRECT)
  026D - 000000000000000005 - LD 5 (DIRECT)
  026E - 010000000000000002 - ST 2 (ADDRESS)
  026F - 000000000000000068 - LD 104 (DIRECT)
  0270 - 010000000000000003 - ST 3 (ADDRESS)
  0271 - 000000000000000065 - LD 101 (DIRECT)
  0272 - 010000000000000004 - ST 4 (ADDRESS)
  0273 - 00000000000000006C - LD 108 (DIRECT)
  0274 - 010000000000000005 - ST 5 (ADDRESS)
  0275 - 00000000000000006C - LD 108 (DIRECT)
  0276 - 010000000000000006 - ST 6 (ADDRESS)
  0277 - 00000000000000006F - LD 111 (DIRECT)
  0278 - 010000000000000007 - ST 7 (ADDRESS)
  0279 - 000000000000000002 - LD 2 (DIRECT)
  027A - 0E0000000000000000 - PUSH 
  027B - 010000000000000000 - ST 0 (STACK_OFFSET)
  027C - 0E0000000000000000 - PUSH 
  027D - 010000000000000000 - ST 0 (STACK_OFFSET)
  027E - 000000000000000000 - LD 0 (STACK_OFFSET)
  027F - 0E0000000000000000 - PUSH 
  0280 - 010000000000000001 - ST 1 (ADDRESS)
  0281 - 000000000000000001 - LD 1 (INDIRECT)
  0282 - 0E0000000000000000 - PUSH 
  0283 - 000000000000000000 - LD 0 (DIRECT)
  0284 - 0E0000000000000000 - PUSH 
  0285 - 000000000000000000 - LD 0 (STACK_OFFSET)
  0286 - 060000000000000001 - EQ 1 (STACK_OFFSET)
  0287 - 0B0000000000000292 - JNZ 658 (ADDRESS)
  0288 - 000000000000000002 - LD 2 (STACK_OFFSET)
  0289 - 020000000000000000 - ADD 0 (STACK_OFFSET)
  028A - 020000000000000001 - ADD 1 (DIRECT)
  028B - 010000000000000001 - ST 1 (ADDRESS)
  028C - 000000000000000001 - LD 1 (INDIRECT)
  028D - 120000000000000000 - OUT 
  028E - 000000000000000000 - LD 0 (STACK_OFFSET)
  028F - 020000000000000001 - ADD 1 (DIRECT)
  0290 - 010000000000000000 - ST 0 (STACK_OFFSET)
  0291 - 0C0000000000000285 - JMP 645 (ADDRESS)
  0292 - 000000000000000002 - LD 2 (STACK_OFFSET)
  0293 - 0D0000000000000000 - POP 
  0294 - 0D0000000000000000 - POP 
  0295 - 0D0000000000000000 - POP 
  0296 - 0C000000000000029D - JMP 669 (ADDRESS)
  0297 - 000000000000000001 - LD 1 (DIRECT)
  0298 - 0E0000000000000000 - PUSH 
  0299 - 000000000000000002 - LD 2 (STACK_OFFSET)
  029A - 020000000000000000 - ADD 0 (STACK_OFFSET)
  029B - 0D0000000000000000 - POP 
  029C - 100000000000000000 - RET 
  029D - 000000000000000000 - LD 0 (DIRECT)
  029E - 010000000000000001 - ST 1 (STACK_OFFSET)
  029F - 000000000000000001 - LD 1 (STACK_OFFSET)
  02A0 - 0E0000000000000000 - PUSH 
  02A1 - 0F0000000000000201 - CALL 513 (ADDRESS)
  02A2 - 0D0000000000000000 - POP 
  02A3 - 130000000000000000 - HLT

output: |
  source LoC: 7 code instr: 165
  ============================================================
  hello0
  instructions_n: 142 ticks: 545

log: |-
  DEBUG   machine:simulation    INSTR_N: 0, TICK: 0, IP: 0, DR: 0, AR: 0, AC: 0, Z: True, INSTR: None, SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 1, TICK: 3, IP: 512, DR: 512, AR: 0, AC: 0, Z: True, INSTR: Instr(JMP arg[512 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 2, TICK: 6, IP: 620, DR: 620, AR: 0, AC: 0, Z: True, INSTR: Instr(JMP arg[620 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 3, TICK: 9, IP: 621, DR: 0, AR: 0, AC: 0, Z: True, INSTR: Instr(LD arg[0 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 4, TICK: 12, IP: 622, DR: 5, AR: 0, AC: 5, Z: True, INSTR: Instr(LD arg[5 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 5, TICK: 15, IP: 623, DR: 2, AR: 0, AC: 5, Z: True, INSTR: Instr(ST arg[2 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 6, TICK: 18, IP: 624, DR: 104, AR: 0, AC: 104, Z: True, INSTR: Instr(LD arg[104 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 7, TICK: 21, IP: 625, DR: 3, AR: 0, AC: 104, Z: True, INSTR: Instr(ST arg[3 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 8, TICK: 24, IP: 626, DR: 101, AR: 0, AC: 101, Z: True, INSTR: Instr(LD arg[101 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 9, TICK: 27, IP: 627, DR: 4, AR: 0, AC: 101, Z: True, INSTR: Instr(ST arg[4 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 10, TICK: 30, IP: 628, DR: 108, AR: 0, AC: 108, Z: True, INSTR: Instr(LD arg[108 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 11, TICK: 33, IP: 629, DR: 5, AR: 0, AC: 108, Z: True, INSTR: Instr(ST arg[5 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 12, TICK: 36, IP: 630, DR: 108, AR: 0, AC: 108, Z: True, INSTR: Instr(LD arg[108 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 13, TICK: 39, IP: 631, DR: 6, AR: 0, AC: 108, Z: True, INSTR: Instr(ST arg[6 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 14, TICK: 42, IP: 632, DR: 111, AR: 0, AC: 111, Z: True, INSTR: Instr(LD arg[111 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 15, TICK: 45, IP: 633, DR: 7, AR: 0, AC: 111, Z: True, INSTR: Instr(ST arg[7 (ADDRESS)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 16, TICK: 48, IP: 634, DR: 2, AR: 0, AC: 2, Z: True, INSTR: Instr(LD arg[2 (DIRECT)] ), SP: 2048, Stack: 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 17, TICK: 51, IP: 635, DR: 2, AR: 0, AC: 2, Z: True, INSTR: Instr(PUSH), SP: 2047, Stack: 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 17, TICK: 52, IP: 635, DR: 2, AR: 0, AC: 2, Z: True, INSTR: Instr(PUSH), SP: 2047, Stack: 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 18, TICK: 56, IP: 636, DR: 2047, AR: 0, AC: 2, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2047, Stack: 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 19, TICK: 59, IP: 637, DR: 2047, AR: 0, AC: 2, Z: False, INSTR: Instr(PUSH), SP: 2046, Stack: 0 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 19, TICK: 60, IP: 637, DR: 2047, AR: 0, AC: 2, Z: False, INSTR: Instr(PUSH), SP: 2046, Stack: 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 20, TICK: 64, IP: 638, DR: 2046, AR: 0, AC: 2, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2046, Stack: 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 21, TICK: 69, IP: 639, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2046, Stack: 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 22, TICK: 72, IP: 640, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(PUSH), SP: 2045, Stack: 0 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 22, TICK: 73, IP: 640, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(PUSH), SP: 2045, Stack: 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 23, TICK: 76, IP: 641, DR: 1, AR: 0, AC: 2, Z: False, INSTR: Instr(ST arg[1 (ADDRESS)] ), SP: 2045, Stack: 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 24, TICK: 81, IP: 642, DR: 5, AR: 0, AC: 5, Z: False, INSTR: Instr(LD arg[1 (INDIRECT)] ), SP: 2045, Stack: 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 25, TICK: 84, IP: 643, DR: 5, AR: 0, AC: 5, Z: False, INSTR: Instr(PUSH), SP: 2044, Stack: 0 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 25, TICK: 85, IP: 643, DR: 5, AR: 0, AC: 5, Z: False, INSTR: Instr(PUSH), SP: 2044, Stack: 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 26, TICK: 88, IP: 644, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[0 (DIRECT)] ), SP: 2044, Stack: 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 27, TICK: 91, IP: 645, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(PUSH), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 27, TICK: 92, IP: 645, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(PUSH), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 28, TICK: 97, IP: 646, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 29, TICK: 102, IP: 647, DR: 5, AR: 0, AC: 0, Z: True, INSTR: Instr(EQ arg[1 (STACK_OFFSET)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 30, TICK: 105, IP: 648, DR: 658, AR: 0, AC: 0, Z: True, INSTR: Instr(JNZ arg[658 (ADDRESS)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 31, TICK: 110, IP: 649, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 32, TICK: 115, IP: 650, DR: 0, AR: 0, AC: 2, Z: False, INSTR: Instr(ADD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 33, TICK: 118, IP: 651, DR: 1, AR: 0, AC: 3, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 34, TICK: 121, IP: 652, DR: 1, AR: 0, AC: 3, Z: False, INSTR: Instr(ST arg[1 (ADDRESS)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 35, TICK: 126, IP: 653, DR: 104, AR: 0, AC: 104, Z: False, INSTR: Instr(LD arg[1 (INDIRECT)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:latch_out     OUT: 104 - "h"
  DEBUG   hardwire:handle_execute_tick INSTR_N: 36, TICK: 129, IP: 654, DR: 104, AR: 0, AC: 104, Z: False, INSTR: Instr(OUT), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 37, TICK: 134, IP: 655, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 38, TICK: 137, IP: 656, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 0 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 39, TICK: 141, IP: 657, DR: 2043, AR: 0, AC: 1, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 40, TICK: 144, IP: 645, DR: 645, AR: 0, AC: 1, Z: False, INSTR: Instr(JMP arg[645 (ADDRESS)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 41, TICK: 149, IP: 646, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 42, TICK: 154, IP: 647, DR: 5, AR: 0, AC: 0, Z: True, INSTR: Instr(EQ arg[1 (STACK_OFFSET)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 43, TICK: 157, IP: 648, DR: 658, AR: 0, AC: 0, Z: True, INSTR: Instr(JNZ arg[658 (ADDRESS)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 44, TICK: 162, IP: 649, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 45, TICK: 167, IP: 650, DR: 1, AR: 0, AC: 3, Z: False, INSTR: Instr(ADD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 46, TICK: 170, IP: 651, DR: 1, AR: 0, AC: 4, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 47, TICK: 173, IP: 652, DR: 1, AR: 0, AC: 4, Z: False, INSTR: Instr(ST arg[1 (ADDRESS)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 48, TICK: 178, IP: 653, DR: 101, AR: 0, AC: 101, Z: False, INSTR: Instr(LD arg[1 (INDIRECT)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:latch_out     OUT: 101 - "e"
  DEBUG   hardwire:handle_execute_tick INSTR_N: 49, TICK: 181, IP: 654, DR: 101, AR: 0, AC: 101, Z: False, INSTR: Instr(OUT), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 50, TICK: 186, IP: 655, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 51, TICK: 189, IP: 656, DR: 1, AR: 0, AC: 2, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 1 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 52, TICK: 193, IP: 657, DR: 2043, AR: 0, AC: 2, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 53, TICK: 196, IP: 645, DR: 645, AR: 0, AC: 2, Z: False, INSTR: Instr(JMP arg[645 (ADDRESS)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 54, TICK: 201, IP: 646, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 55, TICK: 206, IP: 647, DR: 5, AR: 0, AC: 0, Z: True, INSTR: Instr(EQ arg[1 (STACK_OFFSET)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 56, TICK: 209, IP: 648, DR: 658, AR: 0, AC: 0, Z: True, INSTR: Instr(JNZ arg[658 (ADDRESS)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 57, TICK: 214, IP: 649, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 58, TICK: 219, IP: 650, DR: 2, AR: 0, AC: 4, Z: False, INSTR: Instr(ADD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 59, TICK: 222, IP: 651, DR: 1, AR: 0, AC: 5, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 60, TICK: 225, IP: 652, DR: 1, AR: 0, AC: 5, Z: False, INSTR: Instr(ST arg[1 (ADDRESS)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 61, TICK: 230, IP: 653, DR: 108, AR: 0, AC: 108, Z: False, INSTR: Instr(LD arg[1 (INDIRECT)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:latch_out     OUT: 108 - "l"
  DEBUG   hardwire:handle_execute_tick INSTR_N: 62, TICK: 233, IP: 654, DR: 108, AR: 0, AC: 108, Z: False, INSTR: Instr(OUT), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 63, TICK: 238, IP: 655, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 64, TICK: 241, IP: 656, DR: 1, AR: 0, AC: 3, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 2 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 65, TICK: 245, IP: 657, DR: 2043, AR: 0, AC: 3, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 66, TICK: 248, IP: 645, DR: 645, AR: 0, AC: 3, Z: False, INSTR: Instr(JMP arg[645 (ADDRESS)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 67, TICK: 253, IP: 646, DR: 3, AR: 0, AC: 3, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 68, TICK: 258, IP: 647, DR: 5, AR: 0, AC: 0, Z: True, INSTR: Instr(EQ arg[1 (STACK_OFFSET)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 69, TICK: 261, IP: 648, DR: 658, AR: 0, AC: 0, Z: True, INSTR: Instr(JNZ arg[658 (ADDRESS)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 70, TICK: 266, IP: 649, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 71, TICK: 271, IP: 650, DR: 3, AR: 0, AC: 5, Z: False, INSTR: Instr(ADD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 72, TICK: 274, IP: 651, DR: 1, AR: 0, AC: 6, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 73, TICK: 277, IP: 652, DR: 1, AR: 0, AC: 6, Z: False, INSTR: Instr(ST arg[1 (ADDRESS)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 74, TICK: 282, IP: 653, DR: 108, AR: 0, AC: 108, Z: False, INSTR: Instr(LD arg[1 (INDIRECT)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:latch_out     OUT: 108 - "l"
  DEBUG   hardwire:handle_execute_tick INSTR_N: 75, TICK: 285, IP: 654, DR: 108, AR: 0, AC: 108, Z: False, INSTR: Instr(OUT), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 76, TICK: 290, IP: 655, DR: 3, AR: 0, AC: 3, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 77, TICK: 293, IP: 656, DR: 1, AR: 0, AC: 4, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 3 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 78, TICK: 297, IP: 657, DR: 2043, AR: 0, AC: 4, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 79, TICK: 300, IP: 645, DR: 645, AR: 0, AC: 4, Z: False, INSTR: Instr(JMP arg[645 (ADDRESS)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 80, TICK: 305, IP: 646, DR: 4, AR: 0, AC: 4, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 81, TICK: 310, IP: 647, DR: 5, AR: 0, AC: 0, Z: True, INSTR: Instr(EQ arg[1 (STACK_OFFSET)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 82, TICK: 313, IP: 648, DR: 658, AR: 0, AC: 0, Z: True, INSTR: Instr(JNZ arg[658 (ADDRESS)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 83, TICK: 318, IP: 649, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 84, TICK: 323, IP: 650, DR: 4, AR: 0, AC: 6, Z: False, INSTR: Instr(ADD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 85, TICK: 326, IP: 651, DR: 1, AR: 0, AC: 7, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 86, TICK: 329, IP: 652, DR: 1, AR: 0, AC: 7, Z: False, INSTR: Instr(ST arg[1 (ADDRESS)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 87, TICK: 334, IP: 653, DR: 111, AR: 0, AC: 111, Z: False, INSTR: Instr(LD arg[1 (INDIRECT)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:latch_out     OUT: 111 - "o"
  DEBUG   hardwire:handle_execute_tick INSTR_N: 88, TICK: 337, IP: 654, DR: 111, AR: 0, AC: 111, Z: False, INSTR: Instr(OUT), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 89, TICK: 342, IP: 655, DR: 4, AR: 0, AC: 4, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 90, TICK: 345, IP: 656, DR: 1, AR: 0, AC: 5, Z: False, INSTR: Instr(ADD arg[1 (DIRECT)] ), SP: 2043, Stack: 4 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 91, TICK: 349, IP: 657, DR: 2043, AR: 0, AC: 5, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 5 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 92, TICK: 352, IP: 645, DR: 645, AR: 0, AC: 5, Z: False, INSTR: Instr(JMP arg[645 (ADDRESS)] ), SP: 2043, Stack: 5 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 93, TICK: 357, IP: 646, DR: 5, AR: 0, AC: 5, Z: False, INSTR: Instr(LD arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 5 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 94, TICK: 362, IP: 647, DR: 5, AR: 0, AC: 1, Z: False, INSTR: Instr(EQ arg[1 (STACK_OFFSET)] ), SP: 2043, Stack: 5 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 95, TICK: 365, IP: 658, DR: 658, AR: 0, AC: 1, Z: False, INSTR: Instr(JNZ arg[658 (ADDRESS)] ), SP: 2043, Stack: 5 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 96, TICK: 370, IP: 659, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2043, Stack: 5 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 97, TICK: 373, IP: 660, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(POP), SP: 2044, Stack: 5 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 98, TICK: 376, IP: 661, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(POP), SP: 2045, Stack: 2 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 99, TICK: 379, IP: 662, DR: 2, AR: 0, AC: 2, Z: False, INSTR: Instr(POP), SP: 2046, Stack: 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 100, TICK: 382, IP: 669, DR: 669, AR: 0, AC: 2, Z: False, INSTR: Instr(JMP arg[669 (ADDRESS)] ), SP: 2046, Stack: 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 101, TICK: 385, IP: 670, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[0 (DIRECT)] ), SP: 2046, Stack: 2 2 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 102, TICK: 389, IP: 671, DR: 2047, AR: 0, AC: 0, Z: False, INSTR: Instr(ST arg[1 (STACK_OFFSET)] ), SP: 2046, Stack: 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 103, TICK: 394, IP: 672, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[1 (STACK_OFFSET)] ), SP: 2046, Stack: 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 104, TICK: 397, IP: 673, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(PUSH), SP: 2045, Stack: 2 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 104, TICK: 398, IP: 673, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(PUSH), SP: 2045, Stack: 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 105, TICK: 401, IP: 675, DR: 513, AR: 0, AC: 0, Z: False, INSTR: Instr(CALL arg[513 (ADDRESS)] ), SP: 2044, Stack: 5 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 105, TICK: 402, IP: 675, DR: 513, AR: 0, AC: 675, Z: False, INSTR: Instr(CALL arg[513 (ADDRESS)] ), SP: 2044, Stack: 5 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 105, TICK: 403, IP: 513, DR: 513, AR: 0, AC: 675, Z: False, INSTR: Instr(CALL arg[513 (ADDRESS)] ), SP: 2044, Stack: 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 106, TICK: 406, IP: 514, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(LD arg[1 (DIRECT)] ), SP: 2044, Stack: 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 107, TICK: 409, IP: 515, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(PUSH), SP: 2043, Stack: 5 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 107, TICK: 410, IP: 515, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(PUSH), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 108, TICK: 414, IP: 516, DR: 2043, AR: 0, AC: 1, Z: False, INSTR: Instr(ST arg[0 (STACK_OFFSET)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 109, TICK: 417, IP: 517, DR: 10, AR: 0, AC: 10, Z: False, INSTR: Instr(LD arg[10 (DIRECT)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 110, TICK: 420, IP: 518, DR: 10, AR: 0, AC: 10, Z: False, INSTR: Instr(PUSH), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 110, TICK: 421, IP: 518, DR: 10, AR: 0, AC: 10, Z: False, INSTR: Instr(PUSH), SP: 2042, Stack: 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 111, TICK: 426, IP: 519, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(LD arg[1 (STACK_OFFSET)] ), SP: 2042, Stack: 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 112, TICK: 429, IP: 520, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(PUSH), SP: 2041, Stack: 0 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 112, TICK: 430, IP: 520, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(PUSH), SP: 2041, Stack: 1 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 113, TICK: 435, IP: 521, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[4 (STACK_OFFSET)] ), SP: 2041, Stack: 1 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 114, TICK: 440, IP: 522, DR: 1, AR: 0, AC: 0, Z: True, INSTR: Instr(DIV arg[0 (STACK_OFFSET)] ), SP: 2041, Stack: 1 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 115, TICK: 443, IP: 523, DR: 1, AR: 0, AC: 0, Z: True, INSTR: Instr(POP), SP: 2042, Stack: 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 116, TICK: 448, IP: 524, DR: 10, AR: 0, AC: 0, Z: True, INSTR: Instr(EQ arg[0 (STACK_OFFSET)] ), SP: 2042, Stack: 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 117, TICK: 451, IP: 525, DR: 10, AR: 0, AC: 0, Z: True, INSTR: Instr(POP), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 118, TICK: 454, IP: 526, DR: 10, AR: 0, AC: 0, Z: True, INSTR: Instr(PUSH), SP: 2042, Stack: 10 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 118, TICK: 455, IP: 526, DR: 10, AR: 0, AC: 0, Z: True, INSTR: Instr(PUSH), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 119, TICK: 458, IP: 527, DR: 10, AR: 0, AC: 10, Z: True, INSTR: Instr(LD arg[10 (DIRECT)] ), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 120, TICK: 461, IP: 528, DR: 10, AR: 0, AC: 10, Z: True, INSTR: Instr(PUSH), SP: 2041, Stack: 1 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 120, TICK: 462, IP: 528, DR: 10, AR: 0, AC: 10, Z: True, INSTR: Instr(PUSH), SP: 2041, Stack: 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 121, TICK: 467, IP: 529, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(LD arg[2 (STACK_OFFSET)] ), SP: 2041, Stack: 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 122, TICK: 470, IP: 530, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(PUSH), SP: 2040, Stack: 0 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 122, TICK: 471, IP: 530, DR: 1, AR: 0, AC: 1, Z: False, INSTR: Instr(PUSH), SP: 2040, Stack: 1 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 123, TICK: 476, IP: 531, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[5 (STACK_OFFSET)] ), SP: 2040, Stack: 1 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 124, TICK: 481, IP: 532, DR: 1, AR: 0, AC: 0, Z: True, INSTR: Instr(DIV arg[0 (STACK_OFFSET)] ), SP: 2040, Stack: 1 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 125, TICK: 484, IP: 533, DR: 1, AR: 0, AC: 0, Z: True, INSTR: Instr(POP), SP: 2041, Stack: 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 126, TICK: 489, IP: 534, DR: 10, AR: 0, AC: 0, Z: True, INSTR: Instr(GT arg[0 (STACK_OFFSET)] ), SP: 2041, Stack: 10 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 127, TICK: 492, IP: 535, DR: 10, AR: 0, AC: 0, Z: True, INSTR: Instr(POP), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 128, TICK: 497, IP: 536, DR: 0, AR: 0, AC: 0, Z: True, INSTR: Instr(ADD arg[0 (STACK_OFFSET)] ), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 129, TICK: 500, IP: 537, DR: 0, AR: 0, AC: 0, Z: True, INSTR: Instr(POP), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 130, TICK: 503, IP: 545, DR: 545, AR: 0, AC: 0, Z: True, INSTR: Instr(JZ arg[545 (ADDRESS)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 131, TICK: 506, IP: 546, DR: 0, AR: 0, AC: 0, Z: True, INSTR: Instr(LD arg[0 (DIRECT)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 132, TICK: 509, IP: 547, DR: 0, AR: 0, AC: 0, Z: True, INSTR: Instr(PUSH), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 132, TICK: 510, IP: 547, DR: 0, AR: 0, AC: 0, Z: True, INSTR: Instr(PUSH), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 133, TICK: 515, IP: 548, DR: 0, AR: 0, AC: 0, Z: False, INSTR: Instr(LD arg[3 (STACK_OFFSET)] ), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 134, TICK: 520, IP: 549, DR: 0, AR: 0, AC: 1, Z: False, INSTR: Instr(EQ arg[0 (STACK_OFFSET)] ), SP: 2042, Stack: 0 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 135, TICK: 523, IP: 550, DR: 0, AR: 0, AC: 1, Z: False, INSTR: Instr(POP), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 136, TICK: 526, IP: 551, DR: 554, AR: 0, AC: 1, Z: False, INSTR: Instr(JZ arg[554 (ADDRESS)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 137, TICK: 529, IP: 552, DR: 48, AR: 0, AC: 48, Z: False, INSTR: Instr(LD arg[48 (DIRECT)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:latch_out     OUT: 48 - "0"
  DEBUG   hardwire:handle_execute_tick INSTR_N: 138, TICK: 532, IP: 553, DR: 48, AR: 0, AC: 48, Z: False, INSTR: Instr(OUT), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 139, TICK: 535, IP: 618, DR: 618, AR: 0, AC: 48, Z: False, INSTR: Instr(JMP arg[618 (ADDRESS)] ), SP: 2043, Stack: 1 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 140, TICK: 538, IP: 619, DR: 618, AR: 0, AC: 48, Z: False, INSTR: Instr(POP), SP: 2044, Stack: 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 141, TICK: 541, IP: 675, DR: 675, AR: 0, AC: 48, Z: False, INSTR: Instr(RET arg[0 (DIRECT)] ), SP: 2044, Stack: 675 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 141, TICK: 542, IP: 675, DR: 675, AR: 0, AC: 48, Z: False, INSTR: Instr(RET arg[0 (DIRECT)] ), SP: 2045, Stack: 0 2 0 
  DEBUG   hardwire:handle_execute_tick INSTR_N: 142, TICK: 545, IP: 676, DR: 675, AR: 0, AC: 48, Z: False, INSTR: Instr(HLT), SP: 2045, Stack: 0 2 0
